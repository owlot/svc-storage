name: Tag and Release

on:
  push:
    branches:
      - 'main'
      - 'develop'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TERM: xterm

jobs:
  release:
    name: Tag and Release
    if: ${{ !contains(github.event.head_commit.message, 'Provisioned by Terraform') }}
    permissions:
      contents: write
      packages: write
      deployments: write
      pull-requests: write
    runs-on: ubuntu-latest
    concurrency:
      group: release-${{ github.head_ref || 'main' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine new Tag and Release Notes
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: develop
          dry_run: 1

      - name: Changelog
        id: changelog
        uses: mrchief/universal-changelog-action@v1.3.1
        with:
          previousReleaseTagNameOrSha: ${{ steps.tag_version.outputs.previous_tag }}
          nextReleaseTagName: ${{ steps.tag_version.outputs.new_tag }}
          nextReleaseName: "Release ${{ steps.tag_version.outputs.new_version }}"

      - name: Update and commit package version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo install cargo-edit
          cargo set-version ${{ steps.tag_version.outputs.new_version }}
          export FILE_TO_COMMIT="Cargo.toml"
          export MESSAGE="chore(ci): update package version\n\n[skip ci]"
          export CONTENT=$( base64 -i $FILE_TO_COMMIT )
          export SHA=$( git rev-parse $GITHUB_REF_NAME:$FILE_TO_COMMIT )
          gh api --method PUT /repos/:owner/:repo/contents/CHANGELOG.md \
            --field message="$MESSAGE" \
            --field content="$CONTENT" \
            --field encoding="base64" \
            --field branch="$GITHUB_REF_NAME" \
            --field sha="$SHA"

      - name: Update and commit CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat - CHANGELOG.md > temp <<'CHANGELOG.md-EOF'
          ${{ steps.changelog.outputs.changelog }}
          CHANGELOG.md-EOF
          mv temp CHANGELOG.md
          export FILE_TO_COMMIT="CHANGELOG.md"
          export MESSAGE="chore(ci): update changelog\n\n[skip ci]"
          export CONTENT=$( base64 -i $FILE_TO_COMMIT )
          export SHA=$( git rev-parse $GITHUB_REF_NAME:$FILE_TO_COMMIT )
          gh api --method PUT /repos/:owner/:repo/contents/CHANGELOG.md \
            --field message="$MESSAGE" \
            --field content="$CONTENT" \
            --field encoding="base64" \
            --field branch="$GITHUB_REF_NAME" \
            --field sha="$SHA"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'amd64,arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ steps.tag_version.outputs.new_tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.tag_version.outputs.new_tag }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3
#        with:
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          platforms: linux/amd64,linux/arm64

#      - name: Create Pull Request
#        id: cpr
#        uses: peter-evans/create-pull-request@v4
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          commit-message: "Update changelog and manifest\n\n[skip ci]"
#          title: "ci(release): Release ${{ steps.tag_version.outputs.new_version }}"
#          body: |
#            Release ${{ steps.tag_version.outputs.new_tag }}
#          labels: autorelease
#          branch: automatic-release-${{ steps.tag_version.outputs.new_version }}
#          branch-suffix: short-commit-hash

      - name: Build and publish client
        run: |
          make rust-publish

      - name: Push README.md and Cargo.toml changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push

      - name: Push New Tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.tag_version.outputs.new_tag }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ env.GITHUB_REF_NAME == 'develop' }}
